// <auto-generated />
using System;
using Final_Project_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Final_Project_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250809153514_SeedInitialData")]
    partial class SeedInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("Final_Project_API.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsHardcover")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("YearPublished")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "George Orwell",
                            Genre = "Dystopian",
                            IsHardcover = true,
                            Title = "1984",
                            YearPublished = "1949"
                        });
                });

            modelBuilder.Entity("Final_Project_API.Models.Hobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EquipmentNeeded")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("HoursPerWeek")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Hobbies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DifficultyLevel = 2,
                            EquipmentNeeded = "Console, Game, Controller",
                            HoursPerWeek = 6,
                            Name = "Gaming",
                            Type = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DifficultyLevel = 4,
                            EquipmentNeeded = "Bicycle",
                            HoursPerWeek = 6,
                            Name = "Bicycling",
                            Type = "Fitness"
                        });
                });

            modelBuilder.Entity("Final_Project_API.Models.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FavoriteToy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsVaccinated")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 4,
                            FavoriteToy = "Ball",
                            IsVaccinated = true,
                            Name = "Buddy",
                            Species = "Dog"
                        });
                });

            modelBuilder.Entity("Final_Project_API.Models.TeamMember", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CollegeProgram")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FavoriteLanguage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Hometown")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("YearInProgram")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("TeamMembers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BirthDate = new DateTime(2003, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CollegeProgram = "Information Technology",
                            FavoriteLanguage = "C#",
                            FullName = "Nick Hosler",
                            Hometown = "Cincinnati",
                            YearInProgram = "Sophomore"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
